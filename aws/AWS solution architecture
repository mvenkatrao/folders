IAM Roles
----------------


we can attach the roles to access to only one resource of aws service to instance level

if we want our instance should access to only particular services in aws from the instance level we can configure the roles like below

go to the aws roles and select which service that belongs to
attach the required policies to that role attach that role to the instance by modifying IAM role

system manager
#####################

there would be a one feature called session manager in the system manager 
AmazonSSMFullaccess

below steps to enable the session manager 

https://docs.aws.amazon.com/systems-manager/latest/userguide/session-manager-getting-started-instance-profile.html

we can make the group of instance as a resource group in the session manager to collect the multiple instances
- we can execute the commands without loggin also using this session manager
- and we can store that output into s3 also and cloud watch logs also
- we can make the patch policy also using system manager

elastic beanstack - Pas platform as a service
#################

https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/concepts-roles-service.html -> This is to create the service role

Below are the policies that we should attach 

Role Name
aws-elasticbeanstalk-service-role

permissions
AWSElasticBeanstalkEnhancedHealth

trusted entity

Permissions

AWSElasticBeanstalkWebTier
AWSElasticBeanstalkWorkerTier
AWSElasticBeanStalkMultiContainerDocker

Deletion Process 
- we have to delete the environments first
- than we have to remove the application

Ec2 additioinal topics
##############################




1. Physical interface level check -1 
- power check
- connectvity check
- software issue with physical host
- any issue with hardware issues
- to check the system logs 
- Go to Actions - Monitoring-Troubleshoot - click on get system logs
- if something wrong with root volume we can replace with snapshots also

2. Instance level check -2 
- os level
- booting level
- file system correctpion
- OOM
- kernel issues



https://docs.aws.amazon.com/whitepapers/latest/introduction-aws-security/security-of-the-aws-infrastructure.html - aws security documentations 


Placement Group

Cluster - Means it will take same hardware same power supply whnever we launch any istances
 we can create the partitions for placement group mostly for hadop

Rack Spread level placement groups

when we launch any servers that will lanunch in only one rack

we can't lanunch the instance with placement groups if already instance is running or already lanunched if really want we can create one golden ami from that we can lanunch

- placement group steps
- we should create the placement group
- we should go the consul while lanunching we can select the placement group

- to protect the instance we can enable the encryption whenever a instance is lanunching that ebs will be encrypted



Route 53:
##############

godaddy
namecheap.com
bigrock

- when we register with domain with any of the provider if we want to route that trafic to aws we should use Route 53 
  we have two  hosted zones like below
-  public hosted zone - over the internet
- private hosted zone - within the aws account or only to particular vpc also we can make it using this private hosted zone
* when we create any hosted zone we will get two records
1. Name Server Record
below are the imporant records
#############################
if we buy from godaddy we have to update this records over there
if we buy from somewhere we have to update those records over there

Failover Routing Policies
###########################

if we buy it from aws we have to update there also registered domains
ns-506.awsdns-63.com
ns-540.awsdns-03.net
ns-1592.awsdns-07.co.uk
ns-1101.awsdns-09.org

2. SOA (Start of Authority record)

godaddy
manage dns ->
i will use my own nameservers 
we have to add above records 

we have to create the records now 
A Record (address records)
C Record
WAWA
mx
tx records


this is the where we can configure the sub domains also

- to map multiple instance we should create load balancer with target groups
- we should give that load balancer to that
- we should enable the alias and where this traffic should go to the load balancer

Simple routing policie
########################
weighted routing policies
- we can map this domain to multiple resources
we will measure this in 255
255 means 100

weighted routing policies
###########################
- we can map this domain to multiple resources
we will measure this in 255
255 means 100

Record id -> like a tag name
weight we should keep in mumbai like 0 (No traffic)

add another record 
- we should add another record for another region and vpc or load balancer
  there we have to configure the load balancer also and weight should be 255


latency routing policies:
#######################



depending on the latency or how customers are access from where they are access according to that nearby regions it will route the traffic
- it will response near by locations traffic will go which is near by regions 

geo-location routing policies
############################

if we want to configure like when there is a request from India that has to go to the USA for that also we can use his geo-location routing policies

FailOver Routing policies:
################################

- we should keep an one primary one secondary whenver there is a issue with one automatically that will go to the another region or another region  
- before that we should configure the health checks
for failure over 
- no need to configure the health check for secondary
- we should give the domain name we should give the port and we shold give the path also if required for the health checks
- whenver there is a issue with one primary region that will automatically route the traffic to another region
- this is called active passive machanism


One more Routing policy Multivalue answer
############################################

- we can't use alias
- we can delivery the request based on the CIDR range also using ip address routing policy
- we can't use combination of any of the routing policy


VPC 
#####

Virutal private cloud : networking part in aws

Public IP: Unique across the globe. (Internet)
Private IP: Unique with in the network . (internal)

------------------------
IPv4: 32 bit : 2^32
IPv6: 128 bit : 2^128

below commands gives us private ip information
ipconfig or ip addr

To know Public ip of your network go to any of these websites below:

https://whatismyipaddress.com
https://www.whatismyip.com
htps://iplocation.io/

IPv4: 5 Classes

Class A : 0.0.0.0 - 126.255.255.255 (0-126)
Class B : 128.0.0.0 - 191.255.255.255 (128-191)
Class C : 192.0.0.0 - 223.255.255.255 (192-223)

above for regular purpose


Class D : 224.0.0.0 - 239.255.255.255 : BroadCosting/Multicasting
Class E : 240.0.0.0 - 255.255.255.255 : R& D 

127: loopback /localhost -> to use for same local machine to connect internal same local system

10 laptops: enable internal communication : using private ip addresses won't cost us anything
need to re-watch from 10:40 2 mins back

Private Ip address classes

class A : 10.0.0.0 - 10.255.255.255
Class B : 172.16.0.0 - 172.31.255.255
Class C : 192.168.0.0 - 192.168.255.255 - for mostly for home it will be used

Mostly Class A Class B will not be configured but it can be used


above can be used inernally 

what is network:
Groups interconnected hosts, which can communicate each other.
Host: Device we have with in network.

How many networks we required?
How many hosts you required in each network?

Class A : N.H.H.H : 127 Networks, Each Network supports 16M hosts.
class A : 10.0.0.0 - 10.255.255.255

1.0.0.0
1.0.0.1
1.0.0.2
1.0.0.3
1.0.0.4
1.0.0.255/28
--------
1.0.1.0
1.0.2.0
1.0.3.0
1.0.4.0
1.0.255.0
--------------------

1.1.0.0
1.2.0.0
1.3.0.0
1.4.0.0
1.5.0.0
1.6.0.0
1.7.0.0
1.255.0.0

1.(0.255).(0.255).(0.255).(0.255)

it will generate 16 Millions ip's so it will not be used
######################################################################################

Class B : N-255.N-255.H.H : 16,000 networks, Each network supports 65,000 hosts

Class B : 172.16.0.0 - 172.31.255.255

172.16.0.0 - 


Class C : N.N.N.H : 2M networks m each network supports 256 hosts.

/32 --> 32 -32 = 0 = 2^0 = 1
/32 --> 32 - 31 = 1 = 2^1 = 2
/32 --> 32 - 31 = 2 = 2 ^2 = 4
/32 --> 32 - 24 = 8 = 2^8 = 256



/28 --> 32 - 28 = 4 = 2^4 = 16 ==> Min
/ 16 --> 32 - 16 = 16 = 2^16 = 65536 ==> max
our vpc supports minimum is /28 max is /32


General Networks : 2 IPs reserver
AWS Reserver another 3 IPS

16 -5 = 11 Usable Ips
65536 - 5 = 65531 Usable IP's

https://www.davidc.net/sites/default/subnets/subnets.html


subnets
#######

CIDR : Classless interDomain Routing :
--> How big network we required.
--> How many Instances/Resources, we gonna launch (Predict)

Public Subnet : Internet facing subnet..
Private Subnet : Nn-Internet facing subnet..

How big VPC we required?  Ans : 800 Instances : 192.168.0.0/22

How many subnets we requierd withing the vpc
Ans : 6 (2 Public & 4 private)


How many public subnets required within VPC
192.168.0.0/26  to 192.168.0.64/26

How many private subnets required within VPC?

192.168.0.128/25
192.168.1.0/25
192.168.1.128/25	
192.168.2.0/25  

Below are the for the future purpose

192.168.2.128/25
192.168.3.0/25	
192.168.3.128/25	



3 tier application

ELB --> 2 subnets  to run elb (ap-south-1a & ap-south-1b)
APP --> 2 more subnets (ap-south-2a & ap-south-2b)
DB --> 2 more subnets (ap-south-2a & ap-south-2b)



Going to create the VPC with 192



Creating VPC
##############

VPC Only - when we are set up everything manually we can go ahead with this
VPC and more --> wen we want to see how things going on we can choose this option

NameTag
 Custome-VPC-YT

CIDR range
192.168.0.0

No IPv6 CIDR block


Tenancy - Default
dedicated means creating this in dedicated hardware


When we create One VPC we will get below
1 Route tables
2. one security group
3. One network ACL

We have to create the one subnet now 


Tags




his flow 
1.

CVPC-YT-Public-2A
Asia Pacific (Hyderabad)/ap-south-2a
192.168.0.0/26	
		

2.CVPC-YT-Public-2B
192.168.0.64/26	


3.Private Subnets

CVPC-YT-APP-2A
192.168.0.128/25


4.CVPC-YT-APP-2B
192.168.1.0/25

5.CVPC-YT-DB-2A
192.168.1.128/25

6.CVPC-YT-DB-2B
192.168.2.0/25

- One VPC will have only one IGW
once we creawte the VPC + subnets
- we have to create one IGW (each VPC will have only one IGW)
- Once IGW done we have to create the Route table
- One Public Route
- One Private Route

- Now we have to associate public Route to the subnets , we have to associate subnets now 


- when we associate the public subnets --> this is not going to be a public subnets but that has to be enable with igw in the same route table options we should enable the all with igw 0.0.0.0
to simplyfy

- we have to create the one VPC
- we have to create the subnets as per our requirement
- we have to create the one igw
- we have to create the routes
- we have to associate the subnets according to the either to private or public
- when we associate only that will become either public or private according to the our enabling the igw route rules
- we should enable the auto assign public address - this is from subnet settings actions 

- we have to enable the Enable DNS hostnames in the -  vpc settings


- we should enable the logging for the vpc 
- Create flow logs - we can store this in s3 also this logs or in cloudwatch
- we can monitor the logs from subnet level also - Create flow log
   - Create policy 

{
	"Version": "2012-10-17",
	"Statement": [
		{
			"Sid": "VisualEditor0",
			"Effect": "Allow",
			"Action": [
				"logs:CreateLogStream",
				"logs:DescribeLogGroups",
				"logs:DescribeLogStreams",
				"logs:CreateLogGroup",
				"logs:PutLogEvents"
			],
			"Resource": "*"
		}
	]
}


- We have to Create the one role also like below

Role -> Ec2 -> we should select the policy which we created above 
- Now we have to change the TrustedEntitiy in the roles 

{
	"Version": "2012-10-17",
	"Statement": [
		{
			"Effect": "Allow",
			"Principal": {
				"Service": "vpc-flow-logs.amazonaws.com"
			},
			"Action": "sts:AssumeRole"
		}
	]
}


YT-VPC-Role-Cloudwatch -> Role Name
YT-VPC-Logs-Cloudwatch -> Cloud Watch Policies

Now we have to create the flow logs in vpc
- Flow Log Name 
my-vpc-logs

Filter -> All
Aggregation - 1 min

Destination

To CloudWatch


Before that we have to create one log group

- we have to create select the destination log group	
- we have to select the role which early created

- Log record format -> aws default format



Now we have to launch the instance


Jumb server -> means this is the way to communicate with private servers which is placed in public servers

we have to login to the jump server from there also we can login to the private instance but it will be not having any internet
- we have to enable NAT Gateway (NAT instance very old one)
- we have to enable the internet to the private instances using this NAT gateway -> and we should allocate on elastic ip also to this
- we have to enable this nat in subnets of private we should associate


-- we can also enable this using NAT instance 

we have to launch one instance with communicty ami with NAT ami -> we have to go to security -> we have to change the destination stop and save
- we have to go to that nat route tables and we have to enable the instance which we created we have to select that 

- blackhole - means one way traffic

- it will enable the only one HTTP traffic 
- all the traffic will go from NAT




#########################################



NACL - Network acl
- we can filter the traffic using this NACL
- This is VPC level

Refer the screenshot
 - this is the where we can block the traffic according to the ip range 
 - lowest rule number will be highest priority
 - NACL will act as a firewall at subnet level





One requirement 
#####################

we have one s3 data how this can access without IGW without NAT


aws s3 -ls --region ap-south-2 --debug

VPC Endpoint
##################


Two end points

1. Interface Endpoint
2. Gateway will be managed by aws


to simplefly VPC endpoints will connect to the particular resource even if we not enabling IGW or NAT





VPC peering
##########



Requester VPC					Accepter VPC
vpc-08973902cae53a532				vpc-0e8478e4d2becdfdb
	
192.168.0.0/22					172.31.0.0/16
ap-south-1					us-west-1
590183956666					590183956666


- we should create one VPC peering

- we should go to the peering and before above details has to gather

- we should give the accepter vpc id and vpc 
- we should go to the accepter of the vpc we should accpt the peering 
- we should add this requester ip range ini the routes in the requester and also accepter range also 

RDS - Pas
#####

There are 6 Relational Data bases
1. aurora 
 - mysql
 - postgress sql compatiable
 - mysql
 - mariadb
platform as a service

Database as a service


- easy create means aws default all the options
- standard create means from scratch

Retention means it will store the last how many days data it should keep 


maintenance window :
keep the changes when we open maintenance window we can apply

- mysql - swl work bench
- work bench - mariadb
- pg admin - postgresssql
- tad oracle
- sql ssm 



S3 Module


Storage Class we can find it under object property


Storage Classes
- Standard
- Intelligent-Tiering
- Standard-IA -> we can access but retrival time will be longer
- One Zone IA - it will store only in one IA
- Glacier Instant Retrival
 - Glacier is only for achival 
 - we will not able to access this data to access we should initiate the restore than only we can access the data-

- Reduced redenancy storage - not suggestable to use
Glacier Instant Retrieval - this will be accessable quaterly



- we can enable the versioning so that whatever is uploaded latest will be become as a main one
- we can also provide the object access with time frame also
-  we can do the data transmission moving from one class to another class
- we can also delete the objects everything we can do with by creating life cycle rule

- life cycle rule

- refer the screen shot for the strcture 

- lifecycleName - YT-s3-LifecycleName
- limit the scope of the rule using one or more filters -> is this for one bucket or one folder we can decide in this option -> if we want for particular folder
- Apply to all the objects which is in the bucket 
- tags 
  - if we want to move according to the tags also we can 


- we can select from minimum size to maximum size also 


Lifecyle rule actions :
###########################

it's for to move automatically
automatically deletion also

Move current versions of objects between storage classes -> moving only current versions
Move noncurrent versions of objects between storage classes
Expiry current versions of objects
permanently delete noncurrent versions of objects
Delete expired object delete makers or incomplete multiplepart uploads



To host static website we can use s3 bucket also





