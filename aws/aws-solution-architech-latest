IAM 
####

Identity access management


- if we don't want to remember the account id we can make it alias 
- if we want to give only to particular resrouces we cna do that by creating the groups 
- if we want to assign the policy from existing user we can do that by using 2nd options
- if we want to attach directly the policies we can use 3rd options
- if we want to manage the user password streghth we can go to the account settings


- if we create any user with admin access he can do anything xcept 


- to give the billing access

 - Go to My accooun my account -> there we can enable or else we can add below policy
 - Billing
 - Explore the free tier below
 https://aws.amazon.com/free
 
 
 - single sign on - Pending
 - secret center - pending
 
 - the document written in the json format this is called policy
 
 
 we have three types of policies
 - Customer managed - this is managed by customer
 - AWS managed - managed by aws invidual policies
 
 - AWS managed - Job function -> predefined policies example for networking admin all the collected policies
 
 
 - we can use one condition for one bucket only for on one networking
 - we can take
 
- if we want to restrict the access only for one bucket like upload and delete only for one bucket we can do below steps
- we should go to the policies there we can select the s3

- Put Object
- DeleteObject

- we should select particular select specific in resource tab
 - there we we can add the arn number
 
 
 we can attach the policies from the policy page also under Entity
 
 
 Policy simulator 
 
 - > This is to show why policy is failing
 
 
 
 Ec2
 #####
 
 on-demand is pay as you go model
 Reserved instances -> reserving the servers
  - standard reserved instances -> it can modify
  - convertable reserved instances -> we can modify the instance configuration
  
  
  
Spot Instances
#################

this is kind of bidding 
this instance will may go away any time


Dedicated Hosts
#################

we can have the instance dedicadedly
  
  
 
				
 Reserved instances
 #################
 
 
 
 CPU selections
 ######################
 
 aws.amazon.com/ec2/instance-types/
 
 General purpose
 i means -> intel process
 g - graviton process
 a means - AMD process
 
 Compute - > c series
 Compute optimized -> for better cpu
 
 
 Memory optimized -> Better Ram
 
 storage optimized --> it will use for more I/o 
 HPC optimized --> for deep learning
 
 
 
 ssh - 22
 rdp - 	 3389
 http - 80
 https - 443
 dns - 53
 mssql -1433
 mysql - 3306
 
 
 Windows + Run
-  mstsc
 windows latest password
 ################################
 
 y40.KvDYiIe8GmoCRGI7UAYT(9uq0))t
 
 
 when we attach the volume to the instance we should verify by using below commands
 ###########################################################################################
 EBS
#######

if we have 3 status checks 
1. System status check
2. Instance status checks
3.Attached EBS status checks

if we have 2 status checks
1. System status checks
2.Instance status checks

 to verify the mounts
 lsblk
 
 df -Th --> to see the disk usages
 
 file -s /dev/xvdf -> command to check if any files are contains or not we can check using below command 
 
 file -s /dev/xvdf -> if it shows only like data --> means there is no file system
 if it shows something else means it contains the file system
 
 
 to create the file system below is the command
 
 
 mkfs -t xfs /dev/xvdf
 this file system will be stored in /dev/ 
 
 
 -> now we should mount mount that to one folder
 mkdir extravolume/
 sudo mount /dev/xvdf extravolume/
 --> now we should make it permenenly 
 
 -> we should open cat /etc/mtab
 /dev/xvdf /home/ubuntu/extravolume xfs rw,relatime,attr2,inode64,logbufs=8,logbsize=32k,noquota 0 0
 
 vi /etc/fstab -> here we should add above entry 
 
 mount -all
 
 
 xfs_growfs -d /dev/xvdf
 
 
 
 chkconfig httpd on -> this is for redhat whenever instance is restarted it will start the httpd service automatically
 
 /var/www/html  --> we can deploy here
 
 configuration /etc/nginx/site-available  --> configurations
 
 #######################################################################################
 
 snapshot
 #########
 
 we can create the snapshot from the volume and we can attach to any instance 
 - we can also create multiple volumes from one snapshot
 - we can move this volume to multiple region also and there we can create the volume
 
 - the snapshots are getting stored in s3 buckets of aws
 
 if we have any volume without encryption we can follow below steps
 
 - we can go to the snapshots
 - we can create the volunme from the same snapshot there we can encrypt the snapshot


lifecycle manager
Data lifecycle manager
###################

it works with labels and selectors (tags)
- we can exclude the root volume also --> because it contains the os
retain
#####
recent 10 snapshots will be available


age -> we can keep the days


requirement
#########

Golden AMI
----------


i need 10 instances aditional 2 gb volume and apache web server 
1. launch one ec2 instances do all the customize
2. create image
3. we can launch the number of instances 

1. lanuch new branch instances connect new instances and do the instalation

Load Balancer 
#################

we have 4 load balancers

1. Applicatino Load balancers (ALB)
2. Network Load balanacer
3. Gateway Load balancers
4. Classic Load balancers

- the only diffrence between application load balancer and network load balancer is supported protocals 

1. Application Load balancers

we will have two types of scallings 
1. Vertical scallings - adding cpu and memory
2.Horizontal scallings - increasing the instances



- application load balanacer will run on layer 7

in load balanacer in target group we should mention the port on which port our application running for example 80 8080
	

 we can change the algoridham under attributes in target groups
 
 
 
by default application load balanacer works with nested round robin algoridham 

1. nested round robin algoridham - one request to one instance second request goes to second instance like this

2. list outstanding algoridham : it will distribute the traffic where no traffic 


stickyness
##########

if we want route the traffic to only one instance for the particular duration 
- this will not go to the any of the instance untill this duration


we can enable the traffic according to the port range also

we can enable the traffic only from the load balancer we can go and edit the security group in the instance level there we can give the our load balancer security group
- when we update the security groups id in instance level with load balancer security group it will not be accessable to others except from the load balancer


- we  should create one security group if possible
- we should create one target group
- we should create one load balancer and the target group we should attach here now

-we can't be sure about the public ip address to the public ip address - ip address is not fix

Network load balancer
#########################

it supports millions of requests per second with ultra low latency

- layer 4 load balancer
- it will have perment ip address





Autoscalling group
######################

- it will distribute the traffic according to the requests
 1. Create a GOldenAMI (make it as webserver)
 2. Create an ELB (Create an empty load balancer)
 3. Create an ASG
   3.1 Create a launch template (settings of new ec2 instance : AMI, Instance ,type)
1. we should create the AMI from the instance 
2. we should create the empty load balancer without any targets --> before this we should create the target groups where we should'nt attach any instances here
 3. we should create the auto scalling group
 3.1 before creating asg we should creat the launch templete --> what is the instance that you want to launch dynamically this information
   - Provide guidance to help me set up a template that I can use with EC2 Auto Scaling  --> it means it will display which are required
   
 4. we should create the auto scalling now

   -  we should select the availability zones and 
   - we should attach the load balancer target groups now
   - enable the turn on elastic load balancing
   - Health check grace period  ->300 seconds in this duration application can install and server can be up in this duration will not be considered for health check
   - instance warm up it's also same like above --> by default 300 seconds


--> the reason for creating empty load balancer without any associate any instance to the target group is because we will be creating desired as 2 instances those instances will get attached with emplty target group

1. sudo apt install siege
siege -c1000 -t7M -p localhost


above command to test the load   
   
	
	
- scheduling scalling
  -> we can schedule the instances 
  -> go to automatic scalling -> scheduled actions -> there we can 	create the schedulings timings
  
  
Auto scalling deletion policy
##############################

it will check if any instances are availalbe over multiple availability zone if so it will pick if no
   -  select oldest configuration of the launch templete

please refer the image in the github


http://awswithchetan.com/courses/AWS-VPC-and-Networking



Dynamic Auto scalling
#########################


it will create the instances according to the cpu memory or load average

in Dynamic auto scalling we have three types of Policy types
policy types
#################

   1. Target tracking policy
   2. Step scalling policy
   3.Simple scalling policy
   
  
  
1. Target tracking policy
##############################
it will target the cpu utilization and it will increase the instances according to the cpu utilization based on the desired and minimum and maximum count

2. Step scalling policy
########################

we can add the instances accoridn to the cpu utilization if we have 40 percent of cpu we can decide how many we want to add like that so we can keep on adding so it will creasse step by step 


current desired count is 1

when cpu utilization reaches 50 % --> we can add 2+



simple scalling policy
#####################

it means accoridn to the alerts it will decrease 



 Please refer simple scalling 1 screen shot and screen shot 2  also 
EFS

Elastic file system
#######################

- it's serverless
- it will work on port of 2049 nfs


while creating we can customize the options or by default also we can create 

- Customize
 - Name of the nfs 
   Storage Class
    - Standard --> backend it will store the data in multiple regions
	- One zone -> it will store the data only in one Availability zone
Enable Automatic backup --> this will be charged

Lifecycle Management
-> this options will help to move the infrequent access data

Transition into A
7 days access
Transiton into IA
on first access -> if we access would you bring this to standard


Enhanced -> General purpose
Bursting --> if we have more I/O operations we should go for the bursting

Prevent root access by default* -> If you checkmark the "Prevent root access by default" option in AWS EFS, it means that the root user on any EC2 instance or client accessing the file system will not have full access to the data. It limits root user privileges to enhance security and protect your files.
Enforce in-transit encryption for all clients --> If you checkmark the "Enforce in-transit encryption for all clients" option in AWS EFS, it ensures that all data transferred between your EFS file system and clients (like EC2 instances) is encrypted while in transit. This helps protect sensitive data from being intercepted during transfer over the network.


we should attach nfs like below commands
###########################################

sudo apt update
sudo apt install nfs-common

sudo mount -t nfs4 -o nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2,noresvport fs-034b00dc7d1cd7520.efs.ap-south-1.amazonaws.com:/ /var/www/html/

- for windows we have fsx options	



Cloud Watch
############

- Cloud is a monitoring service 
- we can monitor the aws resources etc, resources utilizations and buckets events so on 
- we can scale the instances also based on the alerts 
- we can't see the memory utilization by default

- pending have to watch the creating the custome metrics by installing the cloud agent
- if want to enable the detailed monitoring we can enable on the instances



Automatic DashBoard means -> it will enable the automatic dashboards based on our usages of the services

- we can enable the cpu custome metrics using dashboards

- Create Dashboard -> Stacked Area -> give the instances id's and create
- we can share the dashboards with username and passwords 
- DashBoard -> share -> Enter Gmail id --> it will be sent with usernamd and passwords
- period -> how many minutes that should monitor that threshold


--> Alarams
##############

we can create the alerts using metrics 


