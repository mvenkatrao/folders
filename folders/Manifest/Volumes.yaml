apiVersion: apps/v1
kind: Deployment
metadata:
  name: springapp-Deployment
spec:
  replicas: 2
  selector:
    matchLabels:
      app: springapp
  template:
    metadata:
      name: springapppod
      labels:
        app: springapp
    spec:
      containers:
      - name: springappcontainer
        image:  ashoknagari/spring-boot-mongo:latest
        ports:
        - containerPort: 8080
        resources:
          requests:
            cpu: "200m"
            memory: 256Mi
          limits:
            cpu: 500m 
            memory: 
          env:
          - name: MONGO_DB_HOSTNAME
            value: mongo
          - name: MONGO_DB_USERNAME
            value: devdb
          - name: MONGO_DB_PASSWORD
            value: devdb@123
---
apiVersion: v1
kind: Service
metadata:
  name: springappsvc
spec:
  type: NodePort
  selector:
    app: springapp
  ports:
  - port: 80
    targetPort: 8080
---
apiVersion: apps/v1
kind: ReplicaSet
metadata:
   name: springappsvc
spec:
  selector:
    matchLabels:
      app: mongo
    template:
      metadata:
        name: mongodbpod
        labels:
          app: mongo
      spec:
        containers:
        - name: mongodbcontainer
          image: mongo
          ports:
          - containerPort: 27017
          env:
          - name: MONGO_INITDB_ROOT_USERNAME
            value: devdb
          - name: MONGO_INITDB_ROOT_PASSWORD
            value: devdb@123
          volumeMounts:
          - name: mongodbhospath
            mountPath: /data/db
        volumes:
        - name: mongodbhospath
          hostPath:
            path: /tmp/mongodbdata

---
apiVersion: v1
kind: Service
metadata:
  name: mongo
spec:
  type: ClusterIP
  selector:
    app: mongo
  ports:
  - port: 27017
