Delimeter


:wq

w


cut -c 1-5 outputfile.txt (it ill print the lines from 1 to 5 th)


filed seperater means billimeater

cut -d ":" -f 1,4 /etc/passwd --output-delimiter=" "

in above example -d is delimiter seperater hich is e need to remove 

 httpd -v | grep -i version | cut -d '/' -f 2 | cut -d ' ' -f 1
 
  grep -oE "\b([0-9]{1,3}\.){3}[0-9]{1,3}\b" ipaddress.txt
  cut -d " " -f 1-2 cut_command.sh --output-delimiter="|"
  
  cut -d " " -f 1-8 cut_command_2.sh --output-delimiter=","
  
  #########################################################
  
  cut command is to extact parts of each line from a file 
it's based on below parameters


		* Byte position
		* character position
		* filed based on delimiter (by default delimiter is the tab)
		
		
		character is represented with 4 bites
in utf 1 byte is represed with on character 
		
if we want to work with cut command fields should seperated by tab 

field seperator means delimiter 
#########################################################################################################################
		[root@ip-172-31-43-228 cut_command]# cut -d " " -sf 1 cut_command.sh it will surpress the default tab 
this
this
[root@ip-172-31-43-228 cut_command]#

httpd_version=$(httpd -v | grep -E "version" | cut -d "/" -f 2 | cut -d " " -f 1 ) | echo "$httpd_version"

[root@ip-172-31-43-228 cut_command]# httpd -v | grep -E "version" | cut -d "/" -f 2 | cut -d " " -f 1 && httpd -v | grep -E "built" | cut -d " " -f 8
2.4.53
00:00:00
[root@ip-172-31-43-228 cut_command]#


		